{"version":3,"sources":["images/comingSoon/Fischelaltd.png","serviceWorker.js","components/nav/Header.js","firebase.js","functions/currentUser.js","pages/Home.js","pages/user/AdminDashboard.js","App.js","pages/productInfo.js","functions/spread.js","pages/cart.js","pages/checkOut.js","reducer/index.js","reducer/reducers.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Menu","SubMenu","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","GoogleAuthProvider","currentUser","Element","BgElement","Card","Meta","authToken","a","console","log","process","axios","post","headers","App","Select","Option","props","dispatch","useDispatch","useEffect","unsuscribe","onAuthStateChanged","user","getIdTokenResult","idTokenResult","token","then","res","type","payload","email","name","data","picture","catch","err","ComingSoon","className","src","require","style","position","action","method","enctype","placeholder","rootReducer","combineReducers","state","cart","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,yC,qFCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0ICVYC,IAAXC,QCEPC,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKF,IAAMC,EAAOR,IAASQ,O,GACK,IAAIR,IAASQ,KAAKC,mB,4ECXvCC,G,2BCgBKC,IAAQC,UAGTC,IAATC,K,4BCTSD,IAATC,KFVgB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACvBC,QAAQC,IAAIC,8CADW,SAEVC,IAAMC,KAAK,wCAAyC,GAC7D,CAACC,QAAQ,CAACP,eAHS,mFAAH,uD,SGoJTQ,G,mCCnIGZ,IAAQC,UAGTC,IAATC,KCnBSU,IAAVC,OCmBWd,IAAQC,UACTY,IAAVC,OAEUZ,IAATC,KCHUH,IAAQC,UACTY,IAAVC,OAEUZ,IAATC,KJUI,SAACY,GACT,IAAMC,EAAWC,cAMjBC,qBAAU,WACN,IAAMC,EAAatB,EAAKuB,mBAAL,+BAAAf,EAAA,MAAwB,WAAOgB,GAAP,eAAAhB,EAAA,yDACvCC,QAAQC,IAAIc,IACTA,EAFoC,gCAGXA,EAAKC,mBAHM,OAGjCC,EAHiC,OAInCxB,EAAYwB,EAAcC,OAAOC,MAAK,SAACC,GACnCpB,QAAQC,IAAI,2BAA2BmB,GACvCV,EAAS,CACLW,KAAK,iBAAkBC,QAAQ,CAACC,MAAMR,EAAKQ,MAAOL,MAAMD,EAAcC,MAClEM,KAAMJ,EAAIK,KAAKD,KACfE,QAASN,EAAIK,KAAKC,cAE3BC,OAAM,SAACC,GACN5B,QAAQC,IAAI2B,MAZmB,2CAAxB,uDAmBnB,OAAO,kBAAMf,OACf,IAEF,IAAMgB,EAAa,kBACf,yBAAKC,UAAU,mBACX,yBAAKA,UAAU,8BAEX,yBAAKA,UAAW,aAAa,yBAAKA,UAAW,YAAaC,IAAKC,EAAQ,QAEvE,yBAAKC,MAAO,CAACC,SAAS,YAAaJ,UAAU,uCAC7C,iDACA,0BAAOK,OAAQ,+BAAgCC,OAAO,OAAOC,QAAQ,cACjE,8BAAUP,UAAU,cAEhB,2BAAOQ,YAAY,OAAOR,UAAU,eAAeN,KAAK,OAAOH,KAAK,UAGxE,8BAAUS,UAAU,cACpB,8BAAUQ,YAAY,0BAA0BR,UAAU,eAAeN,KAAK,OAAOH,KAAK,UAI1F,8BAAUS,UAAU,cACpB,4BAAQA,UAAU,iCAAiCN,KAAK,OAAOH,KAAK,QAApE,gBAUhB,OAEA,6BAGI,kBAACQ,EAAD,S,2BK3FOU,EALKC,0BAAgB,CAChCzB,KCLuB,WAAuB,IAAtB0B,EAAqB,uDAAf,KAAMN,EAAS,uCAC7C,OAAOA,EAAOd,MACV,IAAK,iBAGL,IAAK,kBACD,OAAOc,EAAOb,QAElB,QACI,OAAOmB,IDHfC,KCQqB,WAAuB,IAAtBD,EAAqB,uDAAf,KAAMN,EAAS,uCAC3C,OAAOA,EAAOd,MACV,IAAK,cACD,OAAOc,EAAOb,QAClB,QACI,OAAOmB,MCTbE,EAAQC,sBAAYL,EAAaM,iCAEvCC,IAASC,OAGL,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAKLK,SAASC,eAAe,Sb6GrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjC,MAAK,SAAAkC,GACJA,EAAaC,gBAEd3B,OAAM,SAAA4B,GACLvD,QAAQuD,MAAMA,EAAMC,c","file":"static/js/main.f282270c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Fischelaltd.a1e2951d.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useState, useEffect } from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {Menu, Avatar, Badge} from 'antd';\nimport { HomeFilled, SettingOutlined, LoginOutlined, UserOutlined, LogoutOutlined, ShoppingCartOutlined } from '@ant-design/icons';\nimport firebase  from 'firebase'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cookie from 'js-cookie'\n\nconst {SubMenu} = Menu;\n\nconst Header = ()=>{\n    const [ct, setCt] = useState(\"\")\n    let {user, cart} = useSelector((state)=>({...state}))\n    \n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [current, setCurrent] = useState('home');\n    const handleClick = (e)=>{\n      console.log(e)\n      setCurrent(e.key)\n    }\n\n    useEffect(() => {\n      if(Cookie.getJSON(\"cart\") && Cookie.getJSON(\"cart\").productList.length>0){\n          setCt(Cookie.getJSON(\"cart\").productList.length)}\n      \n      return () => {\n        \n      };\n    }, [ct])\n\n\nconst logout = ()=>{\n    firebase.auth().signOut()\n    dispatch({\n      type:\"LOGGED_OUT_USER\",\n      payload: null\n    })\n    history.push(\"/login\")\n\n}\n\n\n\n    return (\n        <>\n        <Menu className={\"sticky-top\"} onClick={handleClick} selectedKeys={[current]} mode={\"horizontal\"}>\n        <Menu.Item key={\"home\"} icon={<HomeFilled /> }>\n          <Link to={\"/\"} className=\"display-4\">Fischela</Link>\n        </Menu.Item>\n\n        {!user && (<Menu.Item key={\"register\"} icon={<UserOutlined /> } className={\"float-right\"}>\n        <Link to={\"/register\"}>Register</Link>\n        </Menu.Item>)}\n\n        {!user && (<><Menu.Item key={\"login\"} icon={<LoginOutlined /> } className={\"float-right\"}>\n        <Link to={\"/login\"}>Login</Link>\n        </Menu.Item>\n        </>\n    )}\n\n        <Menu.Item key={\"cart\"} icon={<span onClick={e=>history.push(\"/add/to/cart\")} className=\"avatar-item\">\n                                            <Badge count={ct}>\n                                            <Avatar class=\"text-warning\" shape=\"square\" icon={<ShoppingCartOutlined />} />\n                                            </Badge>\n                                            </span> } className={\"float-right\"}>\n        </Menu.Item>\n\n        \n        \n       \n        {user&&(<SubMenu key={\"SubMenu\"} className={\"float-right\"} icon={<SettingOutlined />} title={user && (user.email.split(\"@\")[0])}>\n          \n            <Menu.Item key={\"setting:2\"}><Link to={\"/admin/dashboard\"}>Admin Dashboard</Link></Menu.Item>\n            <Menu.Item icon={<LogoutOutlined />} onClick={logout}>LogOut</Menu.Item>\n            <Menu.Item key={\"cart\"} icon={<span className=\"avatar-item\">\n                                            <Badge count={ct}>\n                                            <Avatar shape=\"square\" icon={<ShoppingCartOutlined />} />\n                                            </Badge>\n                                            </span> } className={\"float-right\"}>\n        </Menu.Item>\n    \n\n        \n          \n        </SubMenu>\n        \n        )}\n\n        \n      </Menu>\n        </>\n    )\n} \n\nexport default Header;","import firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDGUjwP0R4GpI0mSXEPsGcYvds5SphI0u8\",\n  authDomain: \"ecommhub-7f8bb.firebaseapp.com\",\n  projectId: \"ecommhub-7f8bb\",\n  storageBucket: \"ecommhub-7f8bb.appspot.com\",\n  messagingSenderId: \"486038183948\",\n  appId: \"1:486038183948:web:8a7c9d703ebdf2c9748e29\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();","import axios from 'axios';\n\nexport const currentUser = async (authToken) => {\n    console.log(process.env.REACT_APP_API)\n    return await axios.post(\"http://localhost:8000/api/currentuser\", {},\n        {headers:{authToken}})\n}","import BannerAnim, { Element } from 'rc-banner-anim';\nimport TweenOne from 'rc-tween-one';\nimport 'rc-banner-anim/assets/index.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { deleteProduct, listProducts } from '../functions/productFunction';\nimport { Card, Avatar } from 'antd';\nimport {Image, Transformation} from 'cloudinary-react';\nimport { Carousel } from 'antd';\n\n\n\n\nimport { EditOutlined, DeleteOutlined, SettingOutlined, } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\n\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport NairaFormat from '../functions/NairaFormater';\nconst BgElement = Element.BgElement;\n\n\nconst { Meta } = Card;\n\nconst Home = (props)=>{\n\n  const onChange = (a, b, c)=>{\n    // console.log(a, b, c)\n  }\n  \n\n  const contentStyle = {\n    height: '160px',\n    color: '#fff',\n    lineHeight: '160px',\n    textAlign: 'center',\n    background: '#364d79',\n  };\n\n  const config = {\n    cloud_name: 'norvirae',\n  api_key: '267177314333933',\n  api_secret: 'qzPi3K8LNu9C66AGEPvuSW7WtP8'\n}\n  const [products, setProducts]  = useState([])\n  const loadProducts = ()=>{\n\n    listProducts().then(res=>{\n      console.log(\"THIS IS FROM THE PRODUCT\",)\n      setProducts(res.data)\n\n    })\n  }\n\n  useEffect(()=>{\n    loadProducts()\n\n    return ()=>{}\n  }, [])\n\n    return (\n    \n        <div className=\"container-fluid\">\n\n\n\n            <Carousel autoplay afterChange={onChange}>\n              <div>\n                <h3 style={contentStyle}>A Market Place for and Only for Mau!ites</h3>\n              </div>\n              <div>\n                <h3 style={contentStyle}>You will Never be Hungry again</h3>\n              </div>\n              <div>\n                <h3 style={contentStyle}>Bibinta is Here for You</h3>\n              </div>\n              <div>\n                <h3 style={contentStyle}>You are Guaranteed to get all Your goods within 24 hours.</h3>\n              </div>\n            </Carousel>\n\n          <div className=\"row  justify-content-center\">\n          <h1 className=\"alert alert-info display-block\">New  Arrivals!</h1>\n          </div>\n\n          <hr/>\n          <div className=\"row justify-content-center\">\n            \n              {products ? products.map(prod => (<div className=\"col-md-3 col-lg-3 col-sm-3 ml-1 p-0\"><Card\n                className={'m-2 img-fluid border blue-shadow'}\n                 hoverable\n                onClick={e=>props.history.push(\"/product/info/\"+prod.slug)}\n\n                style={{ width:200, height:100 }}\n                cover={<Image publicId={prod.images[0].public_id} version=\"1573726751\" cloud_name={config.cloud_name} secure=\"true\" alt=\"Casual Jacket\" height=\"150\" width=\"200\" crop=\"thumb\" />\n            }  \n                   >\n                       \n                <Meta className='m-0 p-0' title={prod.name} />\n\n                <span className={'bold'}>{NairaFormat(prod.price) }</span>\n                \n                \n                \n                \n\n            </Card></div>\n            )):null}\n\n              </div>\n          </div>\n      \n    \n  \n\n\n    \n    \n    )\n    \n    }\nexport default Home","import React, { useState, useEffect, useRef } from 'react';\nimport AdminNav from '../../components/nav/AdminNav'\nimport { deleteProduct, listProducts } from '../../functions/productFunction';\nimport { Card, Avatar } from 'antd';\nimport ReactCrop from 'react-image-crop';\nimport {Image, Transformation} from 'cloudinary-react';\n\n\n\n\nimport { EditOutlined, DeleteOutlined, SettingOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nconst { Meta } = Card;\nconst config = {\n    cloud_name: 'norvirae',\n  api_key: '267177314333933',\n  api_secret: 'qzPi3K8LNu9C66AGEPvuSW7WtP8'\n}\n\n\n\n\nconst AdminDashboard = (props) => {\n    const user = useSelector(state=>state.user)\n    const authToken = user.token\n    const handleDelete = (slug) =>{\n        deleteProduct(slug, authToken).then(res=>{console.log(res)\n            loadProducts()\n        })\n\n    }\n    \n\n\n    const [products, setProducts] = useState([])\n    const loadProducts = ()=>{\n        listProducts().then(res=>{\n            setProducts(res.data)\n            console.log(res.data)\n        })\n    }\n    useEffect(() => {\n        loadProducts()\n      return () => {\n        \n      };\n    }, [])\n    return <div className=\"container-fluid\">\n                <div className={\"row justify-content-center\"}>\n                    <div className={\"col-md-2\"}>\n                            <AdminNav/>\n                    </div>\n\n\n            \n\n            <div className=\"col-md-9\"> \n                <h4 className={'alert alert-secondary'}>Admin page!</h4>\n            {/* cols */}\n            <div className={\"row\"}>\n            {products ? products.map(prod => (<div className=\"col-md-3 col-lg-3 col-sm-12 ml-1 p-0\"><Card\n                className={'mr-1 img-fluid '}\n                 \n                style={{ width:200, height:100 }}\n                cover={<Image publicId={prod.images[0].public_id} version=\"1573726751\" cloud_name={config.cloud_name} secure=\"true\" alt=\"Casual Jacket\" height=\"150\" width=\"200\" crop=\"thumb\" />\n            } \n                actions={[\n                    <DeleteOutlined onClick={e=>handleDelete(prod.slug)} key=\"setting\" />,\n                    <EditOutlined onClick={e=>props.history.push('/edit/product/'+prod.slug)} key=\"edit\" />,\n                  ]} \n                   >\n                       \n                <Meta className='m-0 p-0' title={prod.name} />\n\n                <span className={'bold'}>{\"₦\"+ (prod.price).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,') }</span>\n                \n                \n                \n                \n\n            </Card></div>\n            )):null}\n            \n            </div>\n\n            </div>\n            \n            </div>\n           </div>\n}\n\nexport default AdminDashboard;","import React, { useEffect } from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Header from './components/nav/Header';\nimport Login from './pages/auth/Login';\nimport Register from './pages/auth/Register';\nimport Home from './pages/Home';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport RegisterComplete from './pages/auth/RegisterComplete';\nimport { auth } from './firebase';\nimport { useDispatch } from 'react-redux';\nimport ForgottenPassword from './pages/auth/ForgottenPassword';\nimport { UserRoute } from './components/routes/UserRoutes';\nimport Suscriber from './pages/user/Suscriber';\nimport WishList from './pages/user/WishList';\nimport UpdatePassword from './pages/user/UpdatePassword';\nimport AdminDashboard from './pages/user/AdminDashboard';\n\nimport { currentUser } from './functions/currentUser';\nimport { AdminRoute } from './components/routes/AdminRoute';\nimport CreateCategory from './pages/admin/createCategory';\nimport EditCategory from './pages/admin/editCategory';\nimport CreateSubCategory from './pages/admin/subCategory';\nimport EditSub from './pages/admin/editSub';\nimport Product from './pages/admin/createProduct'\nimport \"./index.css\"\nimport EditProduct from './pages/admin/editProduct';\nimport ProductInfo from './pages/productInfo';\nimport Cart from './pages/cart';\nimport CheckOut from './pages/checkOut';\n\n \n\n\n\nconst App = (props)=>{\n    const dispatch = useDispatch()\n    // const createOrUpdateUser = async (authToken) => {\n    //     console.log(process.env.REACT_APP_API)\n    //     return await axios.post(\"http://localhost:8000/api/createupdateuser\", {},\n    //         {headers:{authToken}})\n    // }\n    useEffect(()=>{\n        const unsuscribe = auth.onAuthStateChanged(async (user)=>{\n            console.log(user)\n            if(user){\n            const idTokenResult = await user.getIdTokenResult()\n                currentUser(idTokenResult.token).then((res)=>{\n                    console.log('FROM THE APP JS SPECTRUM',res)\n                    dispatch({\n                        type:\"LOGGED_IN_USER\", payload:{email:user.email, token:idTokenResult.token, \n                            name: res.data.name,\n                            picture: res.data.picture}\n                    })\n                }).catch((err)=>{\n                    console.log(err)\n                })\n                \n            }\n            \n        })\n\n        return () => unsuscribe()\n    },[])\n\n    const ComingSoon = ()=>(\n        <div className=\"container-fluid\">\n            <div className=\"row justify-content-center\">\n                \n                <div className={\"col-lg-12\"}><img className={\"img-fluid\"} src={require(\"./images/comingSoon/Fischelaltd.png\")}/></div>\n                \n                <div style={{position:\"relative\"}} className=\"col-lg-4 p-5 m-5 border blue-shadow\">\n                <center>Contact form!</center>\n                <form  action={\"mailto:fischelaltd@gmail.com\"} method=\"post\" enctype=\"text/plain\">\n                    <fieldset className=\"form-group\">\n\n                        <input placeholder=\"name\" className=\"form-control\" name=\"name\" type=\"text\"/>\n\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                    <textarea placeholder=\"Type in Your message...\" className=\"form-control\" name=\"mail\" type=\"mail\"></textarea>\n                        \n                    </fieldset>\n\n                    <fieldset className=\"form-group\">\n                    <button className=\"btn btn-outline-info col-lg-12\" name=\"mail\" type=\"mail\">Submit</button>\n                        \n                    </fieldset>\n                </form>\n                </div>\n                </div>\n                </div>\n    )\n\n\n    return (\n    \n    <div>\n        {/* <Header/> */}\n\n        <ComingSoon/>\n        {/* <ToastContainer/> */}\n\n        {/* <Switch>\n        <Route path={\"/\"} component={Home} exact={true}/>\n        <Route path={\"/login\"} component={Login} exact={true}/>\n        <Route path={\"/register\"} component={Register} exact={true}/>\n        <Route path={\"/register/complete\"} component={RegisterComplete} exact={true} />\n        <Route path={\"/forgotten/password\"} component={ForgottenPassword} exact={true} />\n        <Route path={\"/product/info/:slug\"} component={ProductInfo} exact={true} />\n        <Route path={\"/add/to/cart\"} component={Cart} exact={true} />\n        <Route path={\"/checkout\"} component={CheckOut} exact={true} /> */}\n\n\n\n\n        {/* <UserRoute path={\"/user/suscriber\"} component={Suscriber} exact={true} /> */}\n        {/* <UserRoute path={\"/wish/list\"} component={WishList} exact={true} />\n        <UserRoute path={\"/update/password\"} component={UpdatePassword} exact={true} />\n        <UserRoute path={\"/user/suscriber\"} component={Suscriber} exact={true} />\n        <UserRoute path={\"/user/suscriber\"} component={Suscriber} exact={true} />\n\n        <AdminRoute path={\"/admin/dashboard\"} component={AdminDashboard} exact={true} />\n        <AdminRoute path={\"/create/category\"} component={CreateCategory} exact={true} />\n        <AdminRoute path={\"/edit/category/:slug\"} component={EditCategory} exact={true} />\n        <AdminRoute path={\"/create/sub\"} component={CreateSubCategory} exact={true} />\n        <AdminRoute path={\"/edit/sub/:slug\"} component={EditSub} exact={true} />\n        <AdminRoute path={\"/create/product\"} component={Product} exact={true} />\n        <AdminRoute path={\"/edit/product/:slug\"} component={EditProduct} exact={true} /> */}\n\n\n\n\n\n\n        \n\n\n\n\n\n\n        {/* </Switch> */}\n    </div>\n\n    \n    \n    )\n    \n    }\nexport default App","import BannerAnim, { Element } from 'rc-banner-anim';\nimport TweenOne from 'rc-tween-one';\nimport Cookie from 'js-cookie';\nimport 'rc-banner-anim/assets/index.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { deleteProduct, listProducts, readProduct } from '../functions/productFunction';\nimport { Card, Avatar } from 'antd';\nimport {Image, Transformation} from 'cloudinary-react';\nimport {Carousel} from \"react-responsive-carousel\";\nimport {toast} from \"react-toastify\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\n\n\n\nimport { EditOutlined, DeleteOutlined, SettingOutlined,ShoppingCartOutlined, HeartOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nconst BgElement = Element.BgElement;\n\n\nconst { Meta } = Card;\n\nconst ProductInfo = (props)=>{\n  const config = {\n    cloud_name: 'norvirae',\n  api_key: '267177314333933',\n  api_secret: 'qzPi3K8LNu9C66AGEPvuSW7WtP8'\n}\n  const emptyCart = (e)=>{\n    Cookie.remove(\"cart\")\n    window.location.reload()\n  }\n\n  const DuplicateProd = (product, localProductList) => {\n    console.log(\"THIS IS INSIDE CHECKDUP\")\n    let duplicated = false\n    for (let count = 0; count<localProductList.length; count++){\n      console.log(\"COMPARER\", localProductList[count]._id, \"COMPARED\", product._id)\n      if(localProductList[count]._id==product._id){\n        duplicated = !duplicated\n      }\n    }\n    return duplicated;\n\n  }\n  const AddToCart = (e)=>{\n    \n    let localProductList  = Cookie.getJSON(\"cart\")\n    console.log(localProductList)\n    if(!DuplicateProd(product, localProductList.productList)){\n      localProductList.productList.push(product)\n      Cookie.set(\"cart\", {productList:localProductList.productList}, { expires: 7 })\n      let carTs = Cookie.getJSON(\"cart\")\n\n\n      console.log(\"THIS IS ADD TO CART FUNCTIONALITY\",carTs.productList)\n      window.location.reload()\n\n    }\n\n    else{\n      toast.success(\"Product already in Cart checkout\")\n    }\n\n    \n    // toast.success(\"Cool\")\n    // toast.success(carTs.worked)\n  }\n  const [product, setProduct]  = useState('')\n  const loadProduct = ()=>{\n    console.log(props.match.params.slug)\n    readProduct(props.match.params.slug).then(res=>{\n      console.log(\"THIS IS FROM THE PRODUCT\", res.data)\n\n      setProduct(res.data)\n    })\n  }\n\n  useEffect(()=>{\n    console.log(props.match.params)\n    let checkCart = Cookie.getJSON(\"cart\")\n    if (!checkCart){\n      Cookie.set(\"cart\", {productList:[]}, { expires: 7 })\n      toast.success(\"it didn't exist initially\")\n    }\n    loadProduct()\n\n    return ()=>{}\n  }, [])\n\n    return (\n      \n        <div className=\"container-fluid\">\n            \n\n          <div className=\"row  justify-content-center\">\n          <div className=\"alert alert-secondary block h2 block col-lg-12 text-center\">Product</div>\n\n          </div>\n          <hr/>\n          {/* <Image key ={e.public_id} publicId={e.public_id}\n                className=\"m-1 img-fluid\" \n                version=\"1573726751\" cloud_name={config.cloud_name}\n                 secure=\"true\" alt=\"Casual Jacket\" height=\"auto\" width=\"500\" /> */}\n          <div className=\"row justify-content-center\">\n            \n              {product ? <div className=\"col-md-8 col-lg-7 col-sm-12 p-3\"><div\n                className={'border card'}\n                hoverable\n              \n                   >\n                     \n                <Carousel autoPlay infiniteLoop showArrows showStatus showThumbs={true}>                   \n                {product.images?product.images.map(e=>{\n                return <div><img src={e.url} /></div>}):null}\n                </Carousel>\n                       \n\n                <span className={'bold m-1'}>{\"₦\"+ (product.price).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,') }</span>\n                \n                Description: <span className={\"\"}>{product.description}</span>\n                \n                \n\n            </div></div>\n            :null}\n\n            <div \n            \n            className=\"col-lg-5 border card\">\n              <Card actions={[<><ShoppingCartOutlined onClick={e=>AddToCart()}  /><br/> Add to Cart</>,\n               <span onClick={e=>emptyCart()}>Purchase Now</span>, \n               <><HeartOutlined /><br/> Add to WishList</>,\n\n              ]}>\n\n              <h4 className=\"text-center\">{product.name}</h4>\n\n              <ul className={\"list-group\"}>\n                <li className={\"list-group-item\"}>\n                  Price <span className=\"label label-pill pull-xs-right label-default \">\n                    {\"₦\"+ (Number(product.price)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}\n                    </span>\n                </li>\n\n                <li className={\"list-group-item\"}>\n                  Price <span className=\"label label-pill pull-xs-right label-default \">\n                    {product.price}\n                    </span>\n                </li>\n                <li className={\"list-group-item\"}>\n                brand<span className=\"label label-pill pull-xs-right label-default \">\n                    {product.brand}\n                    </span>\n                  </li>\n\n                  <li className={\"list-group-item\"}>\n                  qty<span className=\"label label-pill pull-xs-right label-default \">\n                    {product.qty}\n                    </span>\n                  </li>\n\n                  <li className={\"list-group-item\"}>\n                brand<span className=\"label label-pill pull-xs-right label-default \">\n                    {product.brand}\n                    </span>\n                  </li>\n\n                  <li className={\"list-group-item\"}>\n                  location<span className=\"label label-pill pull-xs-right label-default \">\n                    {product.location}\n                    </span>\n                  </li>\n\n                  <li className={\"list-group-item\"}>\n                  color<span className=\"label label-pill pull-xs-right label-default \">\n                    {product.color}\n                    </span>\n                  </li>\n\n                  <li className={\"list-group-item\"}>\n                  shipping<span className=\"label label-pill pull-xs-right label-default \">\n                    {product.shipping}\n                    </span>\n                  </li>\n\n                  \n                  \n              </ul>\n              </Card>\n              <hr/>\n              </div>\n\n              </div>\n              </div>\n          \n      \n    \n  \n\n\n    \n    \n    )\n    \n    }\nexport default ProductInfo","import React from 'react'\nimport { Select } from \"antd\"\n\nconst {Option} = Select;\n\nexport const SpreadQty = ({products, setProducts, prod,qtysy, setQtysy, prods}) => {\n    let newProds = products\n    const setProds = (e)=>{\n      for (let ct = 0; ct<products.length; ct++){\n        if(newProds[ct]._id == prod._id){\n          newProds[ct].newQty = e\n        }\n      }\n      setProducts(newProds)\n      console.log(products)\n    }\n\n    let qtyss = []\n    for (let count = 1; count<=Number(prods); count++){\n      console.log(\"THIS IS FROM THE COUNT\",count)\n      qtyss.push(count)\n    }\n\n    return (<Select onChange={e=>{setProds(e)}} value={prod.newQty} defaultValue={1} style={{ width: '50%' }} placeholder=\"Tags Mode\" >\n              {qtyss.map((nums)=>{return <Option key={nums} >{nums}</Option>})}\n              </Select>)\n    \n\n  }\n\n  ","\nimport BannerAnim, { Element } from 'rc-banner-anim';\nimport TweenOne from 'rc-tween-one';\nimport Cookie from 'js-cookie';\nimport 'rc-banner-anim/assets/index.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { deleteProduct, listProducts, readProduct } from '../functions/productFunction';\nimport { Card, Avatar, Select } from 'antd';\nimport {Image, Transformation} from 'cloudinary-react';\nimport {Carousel} from \"react-responsive-carousel\";\nimport {toast} from \"react-toastify\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\n\n\n\nimport { EditOutlined, DeleteOutlined, SettingOutlined,ShoppingCartOutlined, HeartOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport NairaFormat from '../functions/NairaFormater';\nimport { SpreadQty } from '../functions/spread';\nconst BgElement = Element.BgElement;\nconst {Option} = Select;\n\nconst { Meta } = Card;\n\nconst Cart = (props)=>{\n  const [total, setTotal] = useState(0)\n  const [qtysy, setQtysy] = useState(0)\n  const [products, setProducts] = useState(Cookie.getJSON(\"cart\").productList)\n\n  const config = {\n    cloud_name: 'norvirae',\n  api_key: '267177314333933',\n  api_secret: 'qzPi3K8LNu9C66AGEPvuSW7WtP8'\n  }\n  \n  const gridStyle = {\n    width: '25%',\n    textAlign: 'center',\n  };\n\n  useEffect(()=>{\n    let sum = 0\n    let newProd = products\n    if(Cookie.getJSON('cart')){\n      for (let count= 0; count<products.length; count++){\n          newProd[count].newQty = 1\n          sum += Number(products[count].price)\n    }\n    setProducts(newProd)\n    setTotal(sum)\n  }\n    return()=>{}\n  },[])\n\n  return ( <div>\n              <div className = {\"container\"}>\n                <div className = {\"row my-2\"}>\n                  <div className = {\"col-lg-7 blue-shadow\"}>\n                \n            {products.map(prod=>{\n            return <Card title={\"Seller > Joshua\"}>\n                <div className={\"row\"}>{JSON.stringify(products)}\n                  <Card.Grid className=\"col-lg-6 col-sm-12 col-md-12\" style={gridStyle}><Image publicId={prod.images[0].public_id} version=\"1573726751\" cloud_name={config.cloud_name} secure=\"true\" alt=\"Casual Jacket\" height=\"150\" width=\"200\" crop=\"thumb\" /></Card.Grid>\n                  <Card.Grid className=\"col-lg-3 col-sm-12 col-md-12\" hoverable={false} style={gridStyle}>\n                  <><span className={'mx-1'}>Qty {<SpreadQty products={products} setProducts={setProducts} prod={prod} qtysy={qtysy} setQtysy={setQtysy} prods={prod.qty}/>}</span></>\n\n                  qtysy {qtysy}\n                  </Card.Grid>\n                  <Card.Grid className=\"col-lg-3\" style={gridStyle}>{NairaFormat(prod.price)}</Card.Grid>\n                </div>\n\n            </Card>\n\n            })}\n\n            </div>\n\n            <div className={\"col-lg-5 blue-shadow\"}>\n            <Card className=\"shadow\">\n                <button onClick={e=>props.history.push({pathname:\"/checkout\",\n                 state:{products:{products}, finalPrice:{total}}})} className={\"btn btn-outline-info col-lg-12\"}>Continue to Check Out</button>\n                <li className={\"list-group-item\"}>\n                  items(3)<span className=\"label label-pill pull-xs-right label-default \">\n                    {NairaFormat(total)}\n                    </span>\n                  </li>\n\n            </Card>\n            </div>\n                    </div>\n                    </div>\n            </div>\n                    \n                    )\n          \n      \n    \n  \n\n\n    \n    \n    \n    \n}\n\nexport default Cart;","import BannerAnim, { Element } from 'rc-banner-anim';\nimport TweenOne from 'rc-tween-one';\nimport Cookie from 'js-cookie';\nimport 'rc-banner-anim/assets/index.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { deleteProduct, listProducts, readProduct } from '../functions/productFunction';\nimport {SpreadQty} from '../functions/spread';\nimport { Card, Avatar, Select } from 'antd';\nimport {Image, Transformation} from 'cloudinary-react';\nimport {Carousel} from \"react-responsive-carousel\";\nimport {toast} from \"react-toastify\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\n\n\n\nimport { EditOutlined, DeleteOutlined, SettingOutlined,ShoppingCartOutlined, HeartOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport NairaFormat from '../functions/NairaFormater';\nimport { createOrder } from '../functions/order';\nconst BgElement = Element.BgElement;\nconst {Option} = Select;\n\nconst { Meta } = Card;\n\nconst CheckOut = (props) => {\n  const user = useSelector(state=>state.user)\n  const email = user.email\n  const authToken = user.token\n  console.log(authToken)\n    // creates Order and makes payment\n\n  const Pay = (payment) => {\n      let newProdList = []\n      for (let count=0; count<products.length; count++){\n        products[count].BuyerId = email\n        newProdList.push(products[count])\n      }\n      setProducts(newProdList)\n      console.log(products)\n\n      createOrder(products, total, authToken).then((res)=>{\n        toast.success(\"order received from backend\")\n        console.log(res)\n      }).catch(err=>{console.log(err)})\n    }\n\n    \n\n\n    console.log(\"FINAL PRICE\",props.location.state.finalPrice)\n    const [total, setTotal] = useState(0)\n    useEffect(()=>{\n            setTotal(props.location.state.finalPrice.total)\n            setProducts(props.location.state.products.products)\n        return ()=>{}\n\n    }, [])\n    const [products, setProducts] = useState([])\n    const config = {\n        cloud_name: 'norvirae',\n      api_key: '267177314333933',\n      api_secret: 'qzPi3K8LNu9C66AGEPvuSW7WtP8'\n      }\n\n      const gridStyle = {\n        width: '25%',\n        textAlign: 'center',\n      };\n\n    return ( <div>\n        <div className = {\"container\"}>\n          <div className = {\"row my-2\"}>\n            <div className = {\"col-lg-7 blue-shadow\"}>\n          \n      {products?products.map(prod=>{\n      return <Card className={'mb-1'} title={\"Seller > Joshua\"}>\n          <div className={\"row\"}>\n            <Card.Grid className=\"col-lg-6\" style={gridStyle}><Image publicId={prod.images[0].public_id} version=\"1573726751\" cloud_name={config.cloud_name} secure=\"true\" alt=\"Casual Jacket\" height=\"150\" width=\"200\" crop=\"thumb\" /></Card.Grid>\n            <Card.Grid className=\"col-lg-6\" hoverable={false} style={gridStyle}>\n                            <><span className={'mx-1'}>Quantity\n                            {SpreadQty(prod.qty)}</span></>\n                            <div className=\"\">{NairaFormat(prod.price)}</div>\n\n\n            </Card.Grid>\n          </div>\n\n      </Card>\n\n      }):null}\n\n      </div>\n\n      <div className={\"col-lg-5 blue-shadow\"}>\n      <Card className=\"shadow\">\n          <button onClick={()=>Pay(products)} className={\"btn btn-outline-info col-lg-12\"}>Check and Pay</button>\n          <li className={\"list-group-item\"}>\n            items(3)<span className=\"label label-pill pull-xs-right label-default \">\n              {NairaFormat(total)}\n              </span>\n            </li>\n\n      </Card>\n      </div>\n              </div>\n              </div>\n      </div>)\n}\n\n\nexport default CheckOut","import {combineReducers} from 'redux';\nimport { addToCart, userReducer } from './reducers';\n\n\nconst rootReducer = combineReducers({\n    user:userReducer,\n    cart:addToCart\n})\n\nexport default rootReducer;","export const userReducer = (state=null, action)=>{\n    switch(action.type){\n        case \"LOGGED_IN_USER\":\n            return action.payload\n\n        case \"LOGGED_OUT_USER\":\n            return action.payload\n\n        default:\n            return state\n    }\n\n}\n\nexport const addToCart = (state=null, action)=>{\n    switch(action.type){\n        case \"ADD_TO_CART\":\n            return action.payload\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport {composeWithDevTools} from \"redux-devtools-extension\"\nimport rootReducer from './reducer'\nconst store = createStore(rootReducer, composeWithDevTools())\n\nReactDOM.render(\n  \n  // <React.StrictMode>\n    <Provider store={store}>  \n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n  \n  // </React.StrictMode>,\n   document.getElementById('root')\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}